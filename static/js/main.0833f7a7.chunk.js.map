{"version":3,"sources":["components/WeatherData.js","components/NavBar.js","App.js","index.js"],"names":["WeatherData","props","className","undefined","weatherValues","Math","round","src","NavBar","App","coordLat","coordLong","useState","updateCoords","updateWeatherValues","searchQuery","updateSearchQuery","useEffect","getLocationInfo","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","console","log","Axios","get","then","res","newWeatherValues","data","main","temp","name","sys","country","wind","speed","rain","pressure","humidity","weather","icon","description","onSubmit","e","preventDefault","searchboxHandler","onChange","target","value","type","placeholder","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0833f7a7.chunk.js","sourcesContent":["import React from 'react';\n\nconst WeatherData = (props) => {\n\n    // Conditional operator '?' to show a '-' if the data is not loaded, instead of showing 'NaN' or something like that\n\n    return(\n        <div className=\"main-container\">\n            <div className=\"container-up\">\n                <div className=\"col-left\">\n                    <div className=\"temp\"> \n                      {props.weatherValues[0]===undefined ? \"-\" : Math.round(props.weatherValues[0])+\"ÂºC\"}\n                    </div>\n                    <div className=\"location\">\n                        {props.weatherValues[1]===undefined ? \"-\" : props.weatherValues[1]}, {props.weatherValues[2]===undefined ? \"-\" : props.weatherValues[2]}\n                    </div>\n                </div>\n                <div className=\"right-col\">\n                    <div className=\"weather-img\"> <img src={`http://openweathermap.org/img/wn/${props.weatherValues[7]}@2x.png`}></img> </div>\n                    <p> {props.weatherValues[8]}</p>\n                </div>\n                \n            </div>\n            <div className=\"container-bottom\">\n                <div className=\"data-item\">\n                    <p>{props.weatherValues[3]===undefined ? \"-\" : Math.round(props.weatherValues[3])+\" kt\"} </p>\n                    <h1>Wind</h1>\n                </div>\n                <div className=\"data-item\">\n                    <p>{props.weatherValues[4]===undefined ? \"-\" : props.weatherValues[4]+\" mm\"} </p>\n                    <h1>Rain</h1>\n                </div>\n                <div className=\"data-item\">\n                    <p> {props.weatherValues[5]===undefined ? \"-\" : props.weatherValues[5]+\" hpa\"}</p>\n                    <h1>Pressure</h1>\n                </div>\n                <div className=\"data-item\">\n                    <p>{props.weatherValues[6]===undefined ? \"-\" : props.weatherValues[6]+\" %\"}</p>\n                    <h1>Humidity</h1>\n                </div>\n            </div>\n        </div>\n    );\n};\n\n\nexport default WeatherData;","import React from 'react';\nimport './NavBar.css';\n\nconst NavBar = () => {\n    return(\n        <div className=\"navbar\">\n            <h1 className=\"logo\">JWeather</h1>\n            \n        </div>\n    );\n};\n\nexport default NavBar;","import React, { useState, useEffect } from 'react';\nimport Axios from 'axios';\nimport './App.css';\nimport WeatherData from './components/WeatherData';\nimport NavBar from './components/NavBar';\n\nfunction App() {\n\n  let coordLat = -34;\n  let coordLong = 56;\n\n  let temp = 0;\n  let city = '';\n  let country = '';\n  let wind = 0;\n  let rain = 0;\n  let pressure = 0;\n  let humidity = 0;\n  let img = '';\n  let desc = '';\n\n  const [coords, updateCoords] = useState([coordLat, coordLong]);\n\n  const [weatherValues, updateWeatherValues] = useState(\n    temp = 0,\n    city = '',\n    country = '',\n    wind = 0,\n    rain = 0,\n    pressure = 0,\n    humidity = 0,\n    img = '',\n    desc = ''\n  );\n\n  const [searchQuery, updateSearchQuery] = useState('');\n\n  useEffect(() => getLocationInfo(), []);\n  \n  \n  const getLocationInfo = () => {\n    if (navigator.geolocation){\n      navigator.geolocation.getCurrentPosition((position) => {\n        coordLat = position.coords.latitude;\n        coordLong = position.coords.longitude;\n\n        let newCoords = [coordLat, coordLong];\n        updateCoords(newCoords);\n       \n        console.log(\"Coordenadas: \" + coordLat + coordLong);\n\n        Axios.get(`http://api.openweathermap.org/data/2.5/weather?lat=${coordLat}&lon=${coordLong}&units=metric&appid=9a1a834849335352ddd99f2f95f6ae9d`).then(\n        res => {\n          console.log(res);\n          let newWeatherValues = [\n            temp = res.data.main.temp,\n            city = res.data.name,\n            country = res.data.sys.country,\n            wind = res.data.wind.speed,\n            rain = res.data.rain,\n            pressure = res.data.main.pressure,\n            humidity = res.data.main.humidity,\n            img = res.data.weather[0].icon,\n            desc = res.data.weather[0].description\n          ]\n          updateWeatherValues(newWeatherValues);\n        }\n      )\n      })\n\n    } else {\n      console.log(\"Geolocation is not supported.\");\n    }\n  }\n\n  const searchboxHandler = (e) => {\n    console.log(\"BUSCA? \" + searchQuery);\n    e.preventDefault();\n    Axios.get(`http://api.openweathermap.org/data/2.5/weather?q=${searchQuery}&units=metric&appid=9a1a834849335352ddd99f2f95f6ae9d`).then(\n        res => {\n          console.log(res);\n          let newWeatherValues = [\n            temp = res.data.main.temp,\n            city = res.data.name,\n            country = res.data.sys.country,\n            wind = res.data.wind.speed,\n            rain = 0,\n            pressure = res.data.main.pressure,\n            humidity = res.data.main.humidity,\n            img = res.data.weather[0].icon,\n            desc = res.data.weather[0].description\n          ]\n          updateWeatherValues(newWeatherValues);\n          updateSearchQuery('');\n        }\n      )}\n  \n\n  return (\n    <div className=\"App\">\n      <NavBar />\n      <div className=\"content-wrapper\">\n        <WeatherData weatherValues={weatherValues} />\n        <form onSubmit={e => searchboxHandler(e)} onChange={e => updateSearchQuery(e.target.value)}>\n          <input type=\"text\" name=\"search\" className=\"searchbox\" value={searchQuery} placeholder=\"Find your city\"></input>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}